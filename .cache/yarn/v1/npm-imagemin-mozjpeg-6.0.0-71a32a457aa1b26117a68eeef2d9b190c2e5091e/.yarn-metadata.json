{
  "manifest": {
    "name": "imagemin-mozjpeg",
    "version": "6.0.0",
    "description": "mozjpeg imagemin plugin",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/imagemin/imagemin-mozjpeg.git"
    },
    "author": {
      "name": "Kevin Mårtensson",
      "email": "kevinmartensson@gmail.com",
      "url": "github.com/kevva"
    },
    "maintainers": [
      {
        "name": "Sindre Sorhus",
        "email": "sindresorhus@gmail.com",
        "url": "sindresorhus.com"
      },
      {
        "name": "Shinnosuke Watanabe",
        "url": "github.com/shinnn"
      }
    ],
    "engines": {
      "node": ">=4"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "compress",
      "image",
      "imageminplugin",
      "img",
      "jpeg",
      "jpg",
      "minify",
      "mozjpeg",
      "optimize"
    ],
    "dependencies": {
      "exec-buffer": "^3.0.0",
      "is-jpg": "^1.0.0",
      "mozjpeg": "^4.0.0"
    },
    "devDependencies": {
      "ava": "*",
      "is-progressive": "^1.0.1",
      "pify": "^2.3.0",
      "xo": "*"
    },
    "xo": {
      "esnext": true
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v1/npm-imagemin-mozjpeg-6.0.0-71a32a457aa1b26117a68eeef2d9b190c2e5091e/package.json",
    "readmeFilename": "readme.md",
    "readme": "# imagemin-mozjpeg [![Build Status](https://travis-ci.org/imagemin/imagemin-mozjpeg.svg?branch=master)](https://travis-ci.org/imagemin/imagemin-mozjpeg) [![Build status](https://ci.appveyor.com/api/projects/status/uuh7yi48erf4ykyo?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin-mozjpeg)\n\n> mozjpeg imagemin plugin\n\n\n## Install\n\n```\n$ npm install --save imagemin-mozjpeg\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminMozjpeg = require('imagemin-mozjpeg');\n\nimagemin(['images/*.jpg'], 'build/images', {use: [imageminMozjpeg()]}).then(() => {\n\tconsole.log('Images optimized');\n});\n```\n\n\n## API\n\n### imageminMozjpeg([options])(buffer)\n\nReturns a promise for a buffer.\n\n#### options\n\n##### quality\n\nType: `number`\n\nCompression quality. Min and max are numbers in range 0 (worst) to 100 (perfect).\n\n##### progressive\n\nType: `boolean`<br>\nDefault: `true`\n\n`false` creates baseline JPEG file.\n\n##### targa\n\nType: `boolean`<br>\nDefault: `false`\n\nInput file is Targa format (usually not needed).\n\n##### revert\n\nType: `boolean`<br>\nDefault: `false`\n\nRevert to standard defaults instead of mozjpeg defaults.\n\n##### fastcrush\n\nType: `boolean`<br>\nDefault: `false`\n\nDisable progressive scan optimization.\n\n##### dcScanOpt\n\nType: `number`<br>\nDefault: `1`\n\nSet DC scan optimization mode.\n\n* `0` One scan for all components\n* `1` One scan per component\n* `2` Optimize between one scan for all components and one scan for 1st component plus one scan for remaining components\n\n##### notrellis\n\nType: `boolean`<br>\nDefault: `false`\n\nDisable [trellis optimization](https://en.wikipedia.org/wiki/Trellis_quantization).\n\n##### notrellisDC\n\nType: `boolean`<br>\nDefault: `false`\n\nDisable trellis optimization of DC coefficients.\n\n##### tune\n\nType: `string`<br>\nDefault: `hvs-psnr`\n\nSet trellis optimization method. Available methods: `psnr`, `hvs-psnr`, `ssim` and `ms-ssim`\n\n##### noovershoot\n\nType: `boolean`<br>\nDefault: `false`\n\nDisable black-on-white deringing via overshoot.\n\n##### arithmetic\n\nType: `boolean`<br>\nDefault: `false`\n\nUse [arithmetic coding](https://en.wikipedia.org/wiki/Arithmetic_coding).\n\n##### quantTable\n\nType: `number`\n\nUse predefined quantization table.\n\n* `0` JPEG Annex K\n* `1` Flat\n* `2` Custom, tuned for MS-SSIM\n* `3` ImageMagick table by N. Robidoux\n* `4` Custom, tuned for PSNR-HVS\n* `5` Table from paper by Klein, Silverstein and Carney\n\n##### smooth\n\nType: `number`\n\nSet the strength of smooth dithered input. (1...100)\n\n##### maxmemory\n\nType: `number`\n\nSet the maximum memory to use in kbytes.\n\n#### buffer\n\nType: `buffer`\n\nBuffer to optimize.\n\n\n## License\n\nMIT © [imagemin](https://github.com/imagemin)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) imagemin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "http://registry.npm.taobao.org/imagemin-mozjpeg/download/imagemin-mozjpeg-6.0.0.tgz#71a32a457aa1b26117a68eeef2d9b190c2e5091e",
    "type": "tarball",
    "reference": "http://registry.npm.taobao.org/imagemin-mozjpeg/download/imagemin-mozjpeg-6.0.0.tgz",
    "hash": "71a32a457aa1b26117a68eeef2d9b190c2e5091e",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "71a32a457aa1b26117a68eeef2d9b190c2e5091e"
}