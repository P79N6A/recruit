{
  "manifest": {
    "name": "umd",
    "version": "3.0.3",
    "description": "Universal Module Definition for use in automated build systems",
    "bin": {
      "umd": "./bin/cli.js"
    },
    "dependencies": {},
    "devDependencies": {
      "brfs": "^1.3.0",
      "linify": "^1.0.1",
      "mocha": "*",
      "uglify-js": "^3.3.15"
    },
    "scripts": {
      "build": "uglifyjs template.js > template.min.js && brfs source.js > index.js",
      "test": "npm run build && mocha -R spec",
      "prepublish": "npm run build && linify transform bin"
    },
    "files": [
      "index.js",
      "bin/cli.js"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/ForbesLindesay/umd.git"
    },
    "author": {
      "name": "ForbesLindesay"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v1/npm-umd-3.0.3-aa9fe653c42b9097678489c01000acb69f0b26cf/package.json",
    "readmeFilename": "README.md",
    "readme": "# umd\n<img src=\"http://i.imgur.com/ypw29XY.png\" align=\"right\"/>\n\nUniversal Module Definition for use in automated build systems\n\n - simple synchronous wrapping of a string\n - `return` style module support\n - CommonJS support\n - prevents internal UMDs from conflicting\n\n[![Build Status](https://img.shields.io/travis/ForbesLindesay/umd/master.svg)](https://travis-ci.org/ForbesLindesay/umd)\n[![Dependency Status](https://img.shields.io/david/ForbesLindesay/umd.svg)](https://david-dm.org/ForbesLindesay/umd)\n[![NPM version](https://img.shields.io/npm/v/umd.svg)](https://www.npmjs.com/package/umd)\n\n## Source Format\n\nIn order for the UMD wrapper to work the source code for your module should `return` the export, e.g.\n\n```javascript\nfunction method() {\n  //code\n}\nmethod.helper = function () {\n  //code\n}\nreturn method;\n```\n\nFor examples, see the examples directory.  The CommonJS module format is also supported by passing true as the second argument to methods.\n\n## API\n\noptions:\n\n - `commonJS` (default: `false`) - If commonJS is `true` then it will accept CommonJS source instead of source code which `return`s the module.\n\n### umd(name, source, [options])\n\n  The `name` should the the name of the module.  Use a string like name, all lower case with hyphens instead of spaces.\n\n  If `source` should be a string, that is wrapped in umd and returned as a string.\n\n### umd.prelude(module, [options])\n\n  return the text which will be inserted before a module.\n\n### umd.postlude(module, [options])\n\n  return the text which will be inserted after a module.\n\n## Command Line\n\n```\nUsage: umd <name> <source> <destination> [options]\n\nPipe Usage: umd <name> [options] < source > destination\n\nOptions:\n\n -h --help     Display usage information\n -c --commonJS Use CommonJS module format\n ```\n\n You can easilly pipe unix commands together like:\n\n ```js\n cat my-module.js | umd my-module | uglify-js > my-module.umd.min.js\n ```\n\n## Name Casing and Characters\n\nThe `name` passed to `umd` will be converted to camel case (`my-library` becomes `myLibrary`) and may only contain:\n\n* alphanumeric characters\n* $\n* _\n\nThe name may not begin with a number. Invalid characters will be stripped. \n\n## License\n\n  MIT\n",
    "licenseText": "Copyright (c) 2013 Forbes Lindesay\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/umd/-/umd-3.0.3.tgz#aa9fe653c42b9097678489c01000acb69f0b26cf",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/umd/-/umd-3.0.3.tgz",
    "hash": "aa9fe653c42b9097678489c01000acb69f0b26cf",
    "registry": "npm",
    "packageName": "umd"
  },
  "registry": "npm",
  "hash": "aa9fe653c42b9097678489c01000acb69f0b26cf"
}